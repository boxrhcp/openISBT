{
  "openapi": "3.0.0",
  "info": {
    "title": "Flask-RESTplus Example API",
    "version": "1.0",
    "description": "It is a [real-life example RESTful API server implementation using Flask-RESTplus](https://github.com/frol/flask-restplus-server-example).\n\nThis demo features:\n* Self-documented RESTful API server using autogenerated OpenAPI specifications;\n* OAuth2 Password Flow (Resource Owner Password Credentials Grant) support;\n* Role-based permission system (it is also auto-documented);\n* PATCH method handled accordingly to RFC 6902;\n* 95+% code coverage.\n\n## Explore the demo\n\nI suggest you start with signing up a new user. To do so, use `POST /users/` endpoint with `recaptcha_key=\"secret_key\"`.\n\nYou will need to know the API Client ID to authenticate, so here it is: `documentation`. Sometimes (e.g. for token refreshing) you might need API Client Secret: `KQ()SWK)SQK)QWSKQW(SKQ)S(QWSQW(SJ*HQ&HQW*SQ*^SSQWSGQSG`.\n\nThere are also two built-in users:\n* `root` (administrator with all permissions) with password `q`\n* `user` (regular user) with password `w`\n",
    "contact": {}
  },
  "tags": [
    {
      "name": "default",
      "description": "Default namespace"
    },
    {
      "name": "auth",
      "description": "Authentication"
    },
    {
      "name": "users",
      "description": "Users"
    },
    {
      "name": "teams",
      "description": "Teams"
    }
  ],
  "servers": [
    {
      "url": "http://ec2-34-248-221-160.eu-west-1.compute.amazonaws.com:5000/api/v1"
    }
  ],
  "paths": {
    "/auth/oauth2_clients/": {
      "options": {
        "responses": {
          "204": {
            "description": "Request fulfilled, nothing follows"
          },
          "401": {
            "description": "Authentication with auth:read OAuth scope(s) is required",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError401"
                }
              }
            }
          },
          "403": {
            "description": "At least Active user is required.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError403"
                }
              }
            }
          }
        },
        "summary": "Check which methods are allowed",
        "description": "**PERMISSIONS: At least Active user is required.**\n\n\nUse this method if you need to know what operations are allowed to be\nperformed on this endpoint, e.g. to decide wether to display a button\nin your UI.\n\nThe list of allowed methods is provided in `Allow` response header.",
        "operationId": "options_o_auth2_clients",
        "security": [
          {
            "oauth2_password": [
              "auth:read"
            ]
          }
        ],
        "tags": [
          "auth"
        ],
        "parameters": []
      },
      "post": {
        "responses": {
          "200": {
            "description": "Request fulfilled, document follows",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DetailedOAuth2Client"
                }
              }
            }
          },
          "401": {
            "description": "Authentication with auth:read OAuth scope(s) is required",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError401"
                }
              }
            }
          },
          "403": {
            "description": "At least Active user is required.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError403"
                }
              }
            }
          },
          "409": {
            "description": "Request conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError409"
                }
              }
            }
          },
          "422": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError422"
                }
              }
            }
          }
        },
        "summary": "Create a new OAuth2 Client",
        "description": "**PERMISSIONS: At least Active user is required.**\n\n\nEssentially, OAuth2 Client is a ``client_id`` and ``client_secret``\npair associated with a user.",
        "operationId": "create_oauth_client",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "redirect_uris": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "default_scopes": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  }
                },
                "required": [
                  "default_scopes"
                ]
              }
            }
          }
        },
        "security": [
          {
            "oauth2_password": [
              "auth:write"
            ]
          }
        ],
        "tags": [
          "auth"
        ],
        "parameters": []
      },
      "get": {
        "responses": {
          "200": {
            "description": "Request fulfilled, document follows",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BaseOAuth2Client"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication with auth:read OAuth scope(s) is required",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError401"
                }
              }
            }
          },
          "403": {
            "description": "At least Active user is required.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError403"
                }
              }
            }
          },
          "422": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError422"
                }
              }
            }
          }
        },
        "summary": "List of OAuth2 Clients",
        "description": "**PERMISSIONS: At least Active user is required.**\n\n\nReturns a list of OAuth2 Clients starting from ``offset`` limited by\n``limit`` parameter.",
        "operationId": "get_o_auth2_clients",
        "parameters": [
          {
            "in": "query",
            "name": "limit",
            "required": false,
            "description": "limit a number of items (allowed range is 1-100), default is 20.",
            "schema": {
              "type": "integer",
              "format": "int32",
              "minimum": 1,
              "maximum": 100,
              "default": 20
            }
          },
          {
            "in": "query",
            "name": "offset",
            "required": false,
            "description": "a number of items to skip, default is 0.",
            "schema": {
              "type": "integer",
              "format": "int32",
              "minimum": 0,
              "default": 0
            }
          },
          {
            "in": "query",
            "name": "user_id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "security": [
          {
            "oauth2_password": [
              "auth:read"
            ]
          }
        ],
        "tags": [
          "auth"
        ]
      }
    },
    "/teams/": {
      "options": {
        "responses": {
          "204": {
            "description": "Request fulfilled, nothing follows"
          },
          "401": {
            "description": "Authentication with teams:read OAuth scope(s) is required",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError401"
                }
              }
            }
          },
          "403": {
            "description": "At least Active user is required.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError403"
                }
              }
            }
          }
        },
        "summary": "Check which methods are allowed",
        "description": "**PERMISSIONS: At least Active user is required.**\n\n\nUse this method if you need to know what operations are allowed to be\nperformed on this endpoint, e.g. to decide wether to display a button\nin your UI.\n\nThe list of allowed methods is provided in `Allow` response header.",
        "operationId": "options_teams",
        "security": [
          {
            "oauth2_password": [
              "teams:read"
            ]
          }
        ],
        "tags": [
          "teams"
        ],
        "parameters": []
      },
      "post": {
        "responses": {
          "200": {
            "description": "Request fulfilled, document follows",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DetailedTeam"
                }
              }
            }
          },
          "401": {
            "description": "Authentication with teams:read OAuth scope(s) is required",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError401"
                }
              }
            }
          },
          "403": {
            "description": "At least Active user is required.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError403"
                }
              }
            }
          },
          "409": {
            "description": "Request conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError409"
                }
              }
            }
          },
          "422": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError422"
                }
              }
            }
          }
        },
        "summary": "Create a new team",
        "description": "**PERMISSIONS: At least Active user is required.**",
        "operationId": "post_teams",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "Bearer ZMzaRBdNnTnWkZz2xmnpS8GG7zciN4"
              ]
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "title": {
                    "type": "string",
                    "maxLength": 50
                  }
                },
                "required": [
                  "title"
                ]
              }
            }
          }
        },
        "security": [
          {
            "oauth2_password": [
              "teams:write"
            ]
          }
        ],
        "tags": [
          "teams"
        ]
      },
      "get": {
        "responses": {
          "200": {
            "description": "Request fulfilled, document follows",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BaseTeam"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication with teams:read OAuth scope(s) is required",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError401"
                }
              }
            }
          },
          "403": {
            "description": "At least Active user is required.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError403"
                }
              }
            }
          },
          "422": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError422"
                }
              }
            }
          }
        },
        "summary": "List of teams",
        "description": "**PERMISSIONS: At least Active user is required.**\n\n\nReturns a list of teams starting from ``offset`` limited by ``limit``\nparameter.",
        "operationId": "get_teams",
        "parameters": [
          {
            "in": "query",
            "name": "limit",
            "required": false,
            "description": "limit a number of items (allowed range is 1-100), default is 20.",
            "schema": {
              "type": "integer",
              "format": "int32",
              "minimum": 1,
              "maximum": 100,
              "default": 20
            }
          },
          {
            "in": "query",
            "name": "offset",
            "required": false,
            "description": "a number of items to skip, default is 0.",
            "schema": {
              "type": "integer",
              "format": "int32",
              "minimum": 0,
              "default": 0
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "Bearer ZMzaRBdNnTnWkZz2xmnpS8GG7zciN4"
              ]
            }
          }
        ],
        "security": [
          {
            "oauth2_password": [
              "teams:read"
            ]
          }
        ],
        "tags": [
          "teams"
        ]
      }
    },
    "/teams/{team_id}": {
      "delete": {
        "responses": {
          "204": {
            "description": "Request fulfilled, nothing follows"
          },
          "401": {
            "description": "Authentication with teams:read OAuth scope(s) is required",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError401"
                }
              }
            }
          },
          "403": {
            "description": "Owner/Supervisor/Admin may execute this action.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError403"
                }
              }
            }
          },
          "404": {
            "description": "Team not found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError404"
                }
              }
            }
          },
          "409": {
            "description": "Request conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError409"
                }
              }
            }
          }
        },
        "summary": "Delete a team by ID",
        "description": "**PERMISSIONS: Owner/Supervisor/Admin may execute this action.**",
        "operationId": "delete_team_by_id",
        "security": [
          {
            "oauth2_password": [
              "teams:write"
            ]
          }
        ],
        "tags": [
          "teams"
        ],
        "parameters": [
          {
            "name": "team_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "Bearer ZMzaRBdNnTnWkZz2xmnpS8GG7zciN4"
              ]
            }
          }
        ]
      },
      "options": {
        "responses": {
          "204": {
            "description": "Request fulfilled, nothing follows"
          },
          "401": {
            "description": "Authentication with teams:read OAuth scope(s) is required",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError401"
                }
              }
            }
          },
          "403": {
            "description": "At least Active user is required.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError403"
                }
              }
            }
          },
          "404": {
            "description": "Team not found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError404"
                }
              }
            }
          }
        },
        "summary": "Check which methods are allowed",
        "description": "**PERMISSIONS: At least Active user is required.**\n\n\nUse this method if you need to know what operations are allowed to be\nperformed on this endpoint, e.g. to decide wether to display a button\nin your UI.\n\nThe list of allowed methods is provided in `Allow` response header.",
        "operationId": "options_team_by_id",
        "security": [
          {
            "oauth2_password": [
              "teams:read"
            ]
          }
        ],
        "tags": [
          "teams"
        ],
        "parameters": [
          {
            "name": "team_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ]
      },
      "patch": {
        "responses": {
          "200": {
            "description": "Request fulfilled, document follows",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DetailedTeam"
                }
              }
            }
          },
          "401": {
            "description": "Authentication with teams:read OAuth scope(s) is required",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError401"
                }
              }
            }
          },
          "403": {
            "description": "Owner/Supervisor/Admin may execute this action.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError403"
                }
              }
            }
          },
          "404": {
            "description": "Team not found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError404"
                }
              }
            }
          },
          "409": {
            "description": "Request conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError409"
                }
              }
            }
          },
          "422": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError422"
                }
              }
            }
          }
        },
        "summary": "Patch team details by ID",
        "description": "**PERMISSIONS: Owner/Supervisor/Admin may execute this action.**",
        "operationId": "patch_team_by_id",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "op": {
                      "type": "string",
                      "enum": [
                        "replace"
                      ]
                    },
                    "path": {
                      "type": "string",
                      "enum": [
                        "/title"
                      ]
                    },
                    "value": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "op",
                    "path",
                    "value"
                  ]
                },
                "minItems": 1,
                "maxItems": 1
              }
            }
          },
          "required": true
        },
        "security": [
          {
            "oauth2_password": [
              "teams:write"
            ]
          }
        ],
        "tags": [
          "teams"
        ],
        "parameters": [
          {
            "name": "team_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "Bearer ZMzaRBdNnTnWkZz2xmnpS8GG7zciN4"
              ]
            }
          }
        ]
      },
      "get": {
        "responses": {
          "200": {
            "description": "Request fulfilled, document follows",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DetailedTeam"
                }
              }
            }
          },
          "401": {
            "description": "Authentication with teams:read OAuth scope(s) is required",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError401"
                }
              }
            }
          },
          "403": {
            "description": "Owner/Supervisor/Admin may execute this action.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError403"
                }
              }
            }
          },
          "404": {
            "description": "Team not found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError404"
                }
              }
            }
          }
        },
        "summary": "Get team details by ID",
        "description": "**PERMISSIONS: Owner/Supervisor/Admin may execute this action.**",
        "operationId": "get_team_by_id",
        "security": [
          {
            "oauth2_password": [
              "teams:read"
            ]
          }
        ],
        "tags": [
          "teams"
        ],
        "parameters": [
          {
            "name": "team_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "Bearer ZMzaRBdNnTnWkZz2xmnpS8GG7zciN4"
              ]
            }
          }
        ]
      }
    },
    "/teams/{team_id}/members/": {
      "options": {
        "responses": {
          "204": {
            "description": "Request fulfilled, nothing follows"
          },
          "401": {
            "description": "Authentication with teams:read OAuth scope(s) is required",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError401"
                }
              }
            }
          },
          "403": {
            "description": "At least Active user is required.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError403"
                }
              }
            }
          },
          "404": {
            "description": "Team not found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError404"
                }
              }
            }
          }
        },
        "summary": "Check which methods are allowed",
        "description": "**PERMISSIONS: At least Active user is required.**\n\n\nUse this method if you need to know what operations are allowed to be\nperformed on this endpoint, e.g. to decide wether to display a button\nin your UI.\n\nThe list of allowed methods is provided in `Allow` response header.",
        "operationId": "options_team_members",
        "security": [
          {
            "oauth2_password": [
              "teams:read"
            ]
          }
        ],
        "tags": [
          "teams"
        ],
        "parameters": [
          {
            "name": "team_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ]
      },
      "post": {
        "responses": {
          "200": {
            "description": "Request fulfilled, document follows",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseTeamMember"
                }
              }
            }
          },
          "401": {
            "description": "Authentication with teams:read OAuth scope(s) is required",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError401"
                }
              }
            }
          },
          "403": {
            "description": "Owner/Supervisor/Admin may execute this action.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError403"
                }
              }
            }
          },
          "404": {
            "description": "Team not found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError404"
                }
              }
            }
          },
          "409": {
            "description": "Request conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError409"
                }
              }
            }
          },
          "422": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError422"
                }
              }
            }
          }
        },
        "summary": "Add a new member to a team",
        "description": "**PERMISSIONS: Owner/Supervisor/Admin may execute this action.**",
        "operationId": "post_team_members",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "user_id": {
                    "type": "integer",
                    "format": "int32"
                  },
                  "is_leader": {
                    "type": "boolean"
                  }
                },
                "required": [
                  "user_id"
                ]
              }
            }
          }
        },
        "security": [
          {
            "oauth2_password": [
              "teams:write"
            ]
          }
        ],
        "tags": [
          "teams"
        ],
        "parameters": [
          {
            "name": "team_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ]
      },
      "get": {
        "responses": {
          "200": {
            "description": "Request fulfilled, document follows",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BaseTeamMember"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication with teams:read OAuth scope(s) is required",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError401"
                }
              }
            }
          },
          "403": {
            "description": "Owner/Supervisor/Admin may execute this action.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError403"
                }
              }
            }
          },
          "404": {
            "description": "Team not found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError404"
                }
              }
            }
          },
          "422": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError422"
                }
              }
            }
          }
        },
        "summary": "Get team members by team ID",
        "description": "**PERMISSIONS: Owner/Supervisor/Admin may execute this action.**",
        "operationId": "get_team_members",
        "parameters": [
          {
            "in": "query",
            "name": "limit",
            "required": false,
            "description": "limit a number of items (allowed range is 1-100), default is 20.",
            "schema": {
              "type": "integer",
              "format": "int32",
              "minimum": 1,
              "maximum": 100,
              "default": 20
            }
          },
          {
            "in": "query",
            "name": "offset",
            "required": false,
            "description": "a number of items to skip, default is 0.",
            "schema": {
              "type": "integer",
              "format": "int32",
              "minimum": 0,
              "default": 0
            }
          },
          {
            "name": "team_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "security": [
          {
            "oauth2_password": [
              "teams:read"
            ]
          }
        ],
        "tags": [
          "teams"
        ]
      }
    },
    "/teams/{team_id}/members/{user_id}": {
      "delete": {
        "responses": {
          "401": {
            "description": "Authentication with teams:read OAuth scope(s) is required",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError401"
                }
              }
            }
          },
          "403": {
            "description": "Owner/Supervisor/Admin may execute this action.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError403"
                }
              }
            }
          },
          "404": {
            "description": "Team or member not found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError404"
                }
              }
            }
          },
          "409": {
            "description": "Request conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError409"
                }
              }
            }
          }
        },
        "summary": "Remove a member from a team",
        "description": "**PERMISSIONS: Owner/Supervisor/Admin may execute this action.**",
        "operationId": "delete_team_member_by_id",
        "security": [
          {
            "oauth2_password": [
              "teams:write"
            ]
          }
        ],
        "tags": [
          "teams"
        ],
        "parameters": [
          {
            "name": "team_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ]
      },
      "options": {
        "responses": {
          "204": {
            "description": "Request fulfilled, nothing follows"
          },
          "401": {
            "description": "Authentication with teams:read OAuth scope(s) is required",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError401"
                }
              }
            }
          },
          "403": {
            "description": "At least Active user is required.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError403"
                }
              }
            }
          },
          "404": {
            "description": "Team or member not found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError404"
                }
              }
            }
          }
        },
        "summary": "Check which methods are allowed",
        "description": "**PERMISSIONS: At least Active user is required.**\n\n\nUse this method if you need to know what operations are allowed to be\nperformed on this endpoint, e.g. to decide wether to display a button\nin your UI.\n\nThe list of allowed methods is provided in `Allow` response header.",
        "operationId": "options_team_member_by_id",
        "security": [
          {
            "oauth2_password": [
              "teams:read"
            ]
          }
        ],
        "tags": [
          "teams"
        ],
        "parameters": [
          {
            "name": "team_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ]
      }
    },
    "/users/": {
      "options": {
        "responses": {
          "204": {
            "description": "Request fulfilled, nothing follows"
          }
        },
        "summary": "Check which methods are allowed",
        "description": "Use this method if you need to know what operations are allowed to be\nperformed on this endpoint, e.g. to decide wether to display a button\nin your UI.\n\nThe list of allowed methods is provided in `Allow` response header.",
        "operationId": "options_users",
        "tags": [
          "users"
        ],
        "parameters": []
      },
      "post": {
        "responses": {
          "200": {
            "description": "Request fulfilled, document follows",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DetailedUser"
                }
              }
            }
          },
          "403": {
            "description": "Request forbidden -- authorization will not help",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError403"
                }
              }
            }
          },
          "409": {
            "description": "Request conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError409"
                }
              }
            }
          },
          "422": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError422"
                }
              }
            }
          }
        },
        "summary": "Create a new user",
        "operationId": "create_user",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "username": {
                    "description": "Example: root",
                    "type": "string"
                  },
                  "first_name": {
                    "type": "string",
                    "maxLength": 30
                  },
                  "middle_name": {
                    "type": "string",
                    "maxLength": 30
                  },
                  "last_name": {
                    "type": "string",
                    "maxLength": 30
                  },
                  "email": {
                    "description": "Example: root@gmail.com",
                    "type": "string",
                    "format": "email"
                  },
                  "password": {
                    "description": "No rules yet",
                    "type": "string"
                  },
                  "recaptcha_key": {
                    "description": "See `/users/signup-form` for details. It is required for everybody, except admins",
                    "type": "string"
                  }
                },
                "required": [
                  "username",
                  "email",
                  "password"
                ]
              }
            }
          }
        },
        "tags": [
          "users"
        ],
        "parameters": []
      },
      "get": {
        "responses": {
          "200": {
            "description": "Request fulfilled, document follows",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BaseUser"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication with users:read OAuth scope(s) is required",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError401"
                }
              }
            }
          },
          "403": {
            "description": "Admin role is required.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError403"
                }
              }
            }
          },
          "422": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError422"
                }
              }
            }
          }
        },
        "summary": "List of users",
        "description": "**PERMISSIONS: Admin role is required.**\n\n\nReturns a list of users starting from ``offset`` limited by ``limit``\nparameter.",
        "operationId": "get_users",
        "parameters": [
          {
            "in": "query",
            "name": "limit",
            "required": false,
            "description": "limit a number of items (allowed range is 1-100), default is 20.",
            "schema": {
              "type": "integer",
              "format": "int32",
              "minimum": 1,
              "maximum": 100,
              "default": 20
            }
          },
          {
            "in": "query",
            "name": "offset",
            "required": false,
            "description": "a number of items to skip, default is 0.",
            "schema": {
              "type": "integer",
              "format": "int32",
              "minimum": 0,
              "default": 0
            }
          }
        ],
        "security": [
          {
            "oauth2_password": [
              "users:read"
            ]
          }
        ],
        "tags": [
          "users"
        ]
      }
    },
    "/users/me": {
      "options": {
        "responses": {
          "204": {
            "description": "Request fulfilled, nothing follows"
          },
          "401": {
            "description": "Authentication with users:read OAuth scope(s) is required",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError401"
                }
              }
            }
          },
          "403": {
            "description": "At least Active user is required.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError403"
                }
              }
            }
          }
        },
        "summary": "Check which methods are allowed",
        "description": "**PERMISSIONS: At least Active user is required.**\n\n\nUse this method if you need to know what operations are allowed to be\nperformed on this endpoint, e.g. to decide wether to display a button\nin your UI.\n\nThe list of allowed methods is provided in `Allow` response header.",
        "operationId": "options_user_me",
        "security": [
          {
            "oauth2_password": [
              "users:read"
            ]
          }
        ],
        "tags": [
          "users"
        ],
        "parameters": []
      },
      "get": {
        "responses": {
          "200": {
            "description": "Request fulfilled, document follows",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DetailedUser"
                }
              }
            }
          },
          "401": {
            "description": "Authentication with users:read OAuth scope(s) is required",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError401"
                }
              }
            }
          },
          "403": {
            "description": "At least Active user is required.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError403"
                }
              }
            }
          }
        },
        "summary": "Get current user details",
        "description": "**PERMISSIONS: At least Active user is required.**",
        "operationId": "get_user_me",
        "security": [
          {
            "oauth2_password": [
              "users:read"
            ]
          }
        ],
        "tags": [
          "users"
        ],
        "parameters": []
      }
    },
    "/users/signup-form": {
      "options": {
        "responses": {
          "204": {
            "description": "Request fulfilled, nothing follows"
          }
        },
        "summary": "Check which methods are allowed",
        "description": "Use this method if you need to know what operations are allowed to be\nperformed on this endpoint, e.g. to decide wether to display a button\nin your UI.\n\nThe list of allowed methods is provided in `Allow` response header.",
        "operationId": "options_user_signup_form",
        "tags": [
          "users"
        ],
        "parameters": []
      },
      "get": {
        "responses": {
          "200": {
            "description": "Request fulfilled, document follows",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserSignupForm"
                }
              }
            }
          }
        },
        "summary": "Get signup form keys",
        "description": "This endpoint must be used in order to get a server reCAPTCHA public key which\nmust be used to receive a reCAPTCHA secret key for POST /users/ form.",
        "operationId": "get_user_signup_form",
        "tags": [
          "users"
        ],
        "parameters": []
      }
    },
    "/users/{user_id}": {
      "patch": {
        "responses": {
          "200": {
            "description": "Request fulfilled, document follows",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DetailedUser"
                }
              }
            }
          },
          "401": {
            "description": "Authentication with users:read OAuth scope(s) is required",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError401"
                }
              }
            }
          },
          "403": {
            "description": "Owner/Supervisor/Admin may execute this action.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError403"
                }
              }
            }
          },
          "404": {
            "description": "User not found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError404"
                }
              }
            }
          },
          "409": {
            "description": "Request conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError409"
                }
              }
            }
          },
          "422": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError422"
                }
              }
            }
          }
        },
        "summary": "Patch user details by ID",
        "description": "**PERMISSIONS: Owner/Supervisor/Admin may execute this action.**",
        "operationId": "patch_user_by_id",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "op": {
                      "type": "string",
                      "enum": [
                        "test",
                        "add",
                        "remove",
                        "replace"
                      ]
                    },
                    "path": {
                      "type": "string",
                      "enum": [
                        "/current_password",
                        "/first_name",
                        "/middle_name",
                        "/last_name",
                        "/password",
                        "/email",
                        "/is_active",
                        "/is_regular_user",
                        "/is_admin"
                      ]
                    },
                    "value": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "op",
                    "path"
                  ]
                }
              }
            }
          },
          "required": true
        },
        "security": [
          {
            "oauth2_password": [
              "users:write"
            ]
          }
        ],
        "tags": [
          "users"
        ],
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ]
      },
      "options": {
        "responses": {
          "204": {
            "description": "Request fulfilled, nothing follows"
          },
          "401": {
            "description": "Authentication with users:read OAuth scope(s) is required",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError401"
                }
              }
            }
          },
          "403": {
            "description": "At least Active user is required.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError403"
                }
              }
            }
          },
          "404": {
            "description": "User not found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError404"
                }
              }
            }
          }
        },
        "summary": "Check which methods are allowed",
        "description": "**PERMISSIONS: At least Active user is required.**\n\n\nUse this method if you need to know what operations are allowed to be\nperformed on this endpoint, e.g. to decide wether to display a button\nin your UI.\n\nThe list of allowed methods is provided in `Allow` response header.",
        "operationId": "options_user_by_id",
        "security": [
          {
            "oauth2_password": [
              "users:read"
            ]
          }
        ],
        "tags": [
          "users"
        ],
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ]
      },
      "get": {
        "responses": {
          "200": {
            "description": "Request fulfilled, document follows",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DetailedUser"
                }
              }
            }
          },
          "401": {
            "description": "Authentication with users:read OAuth scope(s) is required",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError401"
                }
              }
            }
          },
          "403": {
            "description": "Owner/Supervisor/Admin may execute this action.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError403"
                }
              }
            }
          },
          "404": {
            "description": "User not found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError404"
                }
              }
            }
          }
        },
        "summary": "Get user details by ID",
        "description": "**PERMISSIONS: Owner/Supervisor/Admin may execute this action.**",
        "operationId": "get_user_by_id",
        "security": [
          {
            "oauth2_password": [
              "users:read"
            ]
          }
        ],
        "tags": [
          "users"
        ],
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ]
      }
    }
  },
  "components": {
    "responses": {
      "ParseError": {
        "description": "When a mask can't be parsed"
      },
      "MaskError": {
        "description": "When any error occurs on mask"
      }
    },
    "securitySchemes": {
      "oauth2_password": {
        "type": "oauth2",
        "flows": {
          "password": {
            "tokenUrl": "/auth/oauth2/token",
            "scopes": {
              "auth:read": "Provide access to auth details",
              "auth:write": "Provide write access to auth details",
              "users:read": "Provide access to user details",
              "users:write": "Provide write access to user details",
              "teams:read": "Provide access to team details",
              "teams:write": "Provide write access to team details"
            }
          }
        }
      }
    },
    "schemas": {
      "HTTPError403": {
        "type": "object",
        "properties": {
          "status": {
            "type": "integer",
            "format": "int32"
          },
          "message": {
            "type": "string"
          }
        }
      },
      "HTTPError401": {
        "type": "object",
        "properties": {
          "status": {
            "type": "integer",
            "format": "int32"
          },
          "message": {
            "type": "string"
          }
        }
      },
      "HTTPError409": {
        "type": "object",
        "properties": {
          "status": {
            "type": "integer",
            "format": "int32"
          },
          "message": {
            "type": "string"
          }
        }
      },
      "DetailedOAuth2Client": {
        "type": "object",
        "properties": {
          "client_type": {
            "type": "string",
            "enum": [
              "public",
              "confidential"
            ],
            "maxLength": 12
          },
          "default_scopes": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "redirect_uris": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "client_secret": {
            "type": "string",
            "maxLength": 55
          },
          "client_id": {
            "type": "string",
            "readOnly": true,
            "maxLength": 40
          },
          "user_id": {
            "type": "string",
            "readOnly": true
          }
        },
        "required": [
          "client_id",
          "client_secret",
          "default_scopes",
          "redirect_uris"
        ]
      },
      "HTTPError422": {
        "type": "object",
        "properties": {
          "status": {
            "type": "integer",
            "format": "int32"
          },
          "message": {
            "type": "string"
          }
        }
      },
      "BaseOAuth2Client": {
        "type": "object",
        "properties": {
          "client_type": {
            "type": "string",
            "enum": [
              "public",
              "confidential"
            ],
            "maxLength": 12
          },
          "default_scopes": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "redirect_uris": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "client_id": {
            "type": "string",
            "readOnly": true,
            "maxLength": 40
          },
          "user_id": {
            "type": "string",
            "readOnly": true
          }
        },
        "required": [
          "client_id",
          "default_scopes",
          "redirect_uris"
        ]
      },
      "DetailedUser": {
        "type": "object",
        "properties": {
          "created": {
            "type": "string",
            "format": "date-time"
          },
          "is_active": {
            "type": "string"
          },
          "is_admin": {
            "type": "string"
          },
          "is_regular_user": {
            "type": "string"
          },
          "last_name": {
            "type": "string",
            "maxLength": 30
          },
          "middle_name": {
            "type": "string",
            "maxLength": 30
          },
          "username": {
            "type": "string",
            "maxLength": 80
          },
          "updated": {
            "type": "string",
            "format": "date-time"
          },
          "email": {
            "type": "string",
            "maxLength": 120
          },
          "first_name": {
            "type": "string",
            "maxLength": 30
          },
          "id": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          }
        },
        "required": [
          "email",
          "username"
        ]
      },
      "BaseUser": {
        "type": "object",
        "properties": {
          "last_name": {
            "type": "string",
            "maxLength": 30
          },
          "middle_name": {
            "type": "string",
            "maxLength": 30
          },
          "username": {
            "type": "string",
            "maxLength": 80
          },
          "first_name": {
            "type": "string",
            "maxLength": 30
          },
          "id": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          }
        },
        "required": [
          "username"
        ]
      },
      "UserSignupForm": {
        "type": "object",
        "properties": {
          "recaptcha_server_key": {
            "type": "string"
          }
        },
        "required": [
          "recaptcha_server_key"
        ]
      },
      "HTTPError404": {
        "type": "object",
        "properties": {
          "status": {
            "type": "integer",
            "format": "int32"
          },
          "message": {
            "type": "string"
          }
        }
      },
      "DetailedTeam": {
        "type": "object",
        "properties": {
          "created": {
            "type": "string",
            "format": "date-time"
          },
          "updated": {
            "type": "string",
            "format": "date-time"
          },
          "title": {
            "type": "string",
            "maxLength": 50
          },
          "members": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "user": {
                  "type": "object",
                  "properties": {
                    "last_name": {
                      "type": "string",
                      "maxLength": 30
                    },
                    "middle_name": {
                      "type": "string",
                      "maxLength": 30
                    },
                    "username": {
                      "type": "string",
                      "maxLength": 80
                    },
                    "first_name": {
                      "type": "string",
                      "maxLength": 30
                    },
                    "id": {
                      "type": "integer",
                      "format": "int32",
                      "readOnly": true
                    }
                  },
                  "required": [
                    "username"
                  ]
                },
                "is_leader": {
                  "type": "boolean"
                }
              }
            }
          },
          "id": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          }
        },
        "required": [
          "title"
        ]
      },
      "BaseTeam": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "maxLength": 50
          },
          "id": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          }
        },
        "required": [
          "title"
        ]
      },
      "BaseTeamMember": {
        "type": "object",
        "properties": {
          "team": {
            "type": "object",
            "properties": {
              "title": {
                "type": "string",
                "maxLength": 50
              },
              "id": {
                "type": "integer",
                "format": "int32",
                "readOnly": true
              }
            },
            "required": [
              "title"
            ]
          },
          "user": {
            "type": "object",
            "properties": {
              "last_name": {
                "type": "string",
                "maxLength": 30
              },
              "middle_name": {
                "type": "string",
                "maxLength": 30
              },
              "username": {
                "type": "string",
                "maxLength": 80
              },
              "first_name": {
                "type": "string",
                "maxLength": 30
              },
              "id": {
                "type": "integer",
                "format": "int32",
                "readOnly": true
              }
            },
            "required": [
              "username"
            ]
          },
          "is_leader": {
            "type": "boolean"
          }
        }
      }
    },
    "links": {},
    "callbacks": {}
  },
  "security": []
}