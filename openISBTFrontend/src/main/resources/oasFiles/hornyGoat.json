{
  "swagger": "2.0",
  "info": {
    "description": "Application which allows to extract the processed data from rides. Expose information to the UI",
    "version": "1.0",
    "title": "Horny Goat API",
    "license": {
      "name": "Apache License Version 2.0",
      "url": "https://www.apache.org/licenses/LICENSE-2.0"
    }
  },
  "host": "localhost:8080",
  "basePath": "/",
  "tags": [
    {
      "name": "Insights",
      "description": "Display the found insights after processing the original data"
    },
    {
      "name": "Original Data",
      "description": "Display information from loaded data before processing"
    },
    {
      "name": "Stats",
      "description": "Display data sets to generate charts"
    }
  ],
  "paths": {
    "/stats/measurements": {
      "get": {
        "tags": [
          "Stats"
        ],
        "summary": "Get data to generate a chart",
        "description": "Display the information depends on the type in order to generate a chart",
        "operationId": "getDataForChartUsingGET",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "type",
            "in": "query",
            "description": "type",
            "required": true,
            "type": "string",
            "enum": [
              "BY_DAY_OF_WEEK",
              "BY_HOUR"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "Labels and series to generate a chart",
            "schema": {
              "$ref": "#/definitions/Chart Stat"
            }
          }
        },
        "deprecated": false
      }
    },
    "/stops/hot-spots": {
      "get": {
        "tags": [
          "Insights"
        ],
        "summary": "Get stopping hot spots",
        "description": "Find common stops for the loaded rides",
        "operationId": "getStopHotSpotsUsingGET",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "carInvolved",
            "in": "query",
            "description": "Car involved",
            "required": false,
            "type": "boolean",
            "allowEmptyValue": false
          },
          {
            "name": "latOne",
            "in": "query",
            "description": "Latitude one for boundary. Lower limit inclusive",
            "required": false,
            "type": "string",
            "allowEmptyValue": false
          },
          {
            "name": "latTwo",
            "in": "query",
            "description": "Latitude two for the boundary. Upper limit inclusive",
            "required": false,
            "type": "string",
            "allowEmptyValue": false
          },
          {
            "name": "lonOne",
            "in": "query",
            "description": "Longitude one for the boundary. Lower limit inclusive",
            "required": false,
            "type": "string",
            "allowEmptyValue": false
          },
          {
            "name": "lonTwo",
            "in": "query",
            "description": "Longitude two for the boundary. Upper limit inclusive",
            "required": false,
            "type": "string",
            "allowEmptyValue": false
          },
          {
            "name": "page",
            "in": "query",
            "description": "Number of the page starting by 0",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "size",
            "in": "query",
            "description": "Number of records by page. Default is 20",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "List of stopping hot spots or empty array",
            "schema": {
              "$ref": "#/definitions/Page«Stop Hotspot»"
            }
          }
        },
        "deprecated": false
      }
    },
    "/tracks": {
      "get": {
        "tags": [
          "Original Data"
        ],
        "summary": "Get all tracks",
        "description": "Display only tracks id. Only display processed track ids",
        "operationId": "getTracksUsingGET",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "Number of the page starting by 0",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "size",
            "in": "query",
            "description": "Number of records by page. Default is 20",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "List of found ids or empty page",
            "schema": {
              "$ref": "#/definitions/Page«string»"
            }
          }
        },
        "deprecated": false
      }
    },
    "/tracks/{trackId}/incidents": {
      "get": {
        "tags": [
          "Original Data"
        ],
        "summary": "Get incidents by track id",
        "description": "Find incidents by track id and by car involved",
        "operationId": "getIncidentsByTrackIdUsingGET",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "carInvolved",
            "in": "query",
            "description": "Car involved",
            "required": false,
            "type": "boolean",
            "allowEmptyValue": false
          },
          {
            "name": "latOne",
            "in": "query",
            "description": "Latitude one for boundary. Lower limit inclusive",
            "required": false,
            "type": "string",
            "allowEmptyValue": false
          },
          {
            "name": "latTwo",
            "in": "query",
            "description": "Latitude two for the boundary. Upper limit inclusive",
            "required": false,
            "type": "string",
            "allowEmptyValue": false
          },
          {
            "name": "lonOne",
            "in": "query",
            "description": "Longitude one for the boundary. Lower limit inclusive",
            "required": false,
            "type": "string",
            "allowEmptyValue": false
          },
          {
            "name": "lonTwo",
            "in": "query",
            "description": "Longitude two for the boundary. Upper limit inclusive",
            "required": false,
            "type": "string",
            "allowEmptyValue": false
          },
          {
            "name": "trackId",
            "in": "path",
            "description": "identification of the track",
            "required": true,
            "type": "string"
          },
          {
            "name": "page",
            "in": "query",
            "description": "Number of the page starting by 0",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "size",
            "in": "query",
            "description": "Number of records by page. Default is 20",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "List of found incidents or empty page",
            "schema": {
              "$ref": "#/definitions/Page«Incident»"
            }
          }
        },
        "deprecated": false
      }
    },
    "/tracks/{trackId}/measurements": {
      "get": {
        "tags": [
          "Original Data"
        ],
        "summary": "Find measurements",
        "description": "Find measurements by track id and (optional) by a boundary between a lower limit (latitude one, longitude one) and an upper limit (latitude two, longitude two). If one of the boundary limits is not provided, it will ignore all of them. In case of providing all of the values with invalid inputs, it will query with those values and the result would be an empty page",
        "operationId": "findMeasurementsUsingGET",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "latOne",
            "in": "query",
            "description": "Latitude one for boundary. Lower limit inclusive",
            "required": false,
            "type": "string",
            "allowEmptyValue": false
          },
          {
            "name": "latTwo",
            "in": "query",
            "description": "Latitude two for the boundary. Upper limit inclusive",
            "required": false,
            "type": "string",
            "allowEmptyValue": false
          },
          {
            "name": "lonOne",
            "in": "query",
            "description": "Longitude one for the boundary. Lower limit inclusive",
            "required": false,
            "type": "string",
            "allowEmptyValue": false
          },
          {
            "name": "lonTwo",
            "in": "query",
            "description": "Longitude two for the boundary. Upper limit inclusive",
            "required": false,
            "type": "string",
            "allowEmptyValue": false
          },
          {
            "name": "trackId",
            "in": "path",
            "description": "identification of the track",
            "required": true,
            "type": "string"
          },
          {
            "name": "page",
            "in": "query",
            "description": "Number of the page starting by 0",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "size",
            "in": "query",
            "description": "Number of records by page. Default is 20",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "Found measurements or empty page",
            "schema": {
              "$ref": "#/definitions/Page«Measurement»"
            }
          }
        },
        "deprecated": false
      }
    },
    "/tracks/{trackId}/stops": {
      "get": {
        "tags": [
          "Insights"
        ],
        "summary": "Get identified stops by track id",
        "operationId": "getStopsByTrackIdUsingGET",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "carInvolved",
            "in": "query",
            "description": "Car involved",
            "required": false,
            "type": "boolean",
            "allowEmptyValue": false
          },
          {
            "name": "latOne",
            "in": "query",
            "description": "Latitude one for boundary. Lower limit inclusive",
            "required": false,
            "type": "string",
            "allowEmptyValue": false
          },
          {
            "name": "latTwo",
            "in": "query",
            "description": "Latitude two for the boundary. Upper limit inclusive",
            "required": false,
            "type": "string",
            "allowEmptyValue": false
          },
          {
            "name": "lonOne",
            "in": "query",
            "description": "Longitude one for the boundary. Lower limit inclusive",
            "required": false,
            "type": "string",
            "allowEmptyValue": false
          },
          {
            "name": "lonTwo",
            "in": "query",
            "description": "Longitude two for the boundary. Upper limit inclusive",
            "required": false,
            "type": "string",
            "allowEmptyValue": false
          },
          {
            "name": "trackId",
            "in": "path",
            "description": "identification of the track",
            "required": true,
            "type": "string"
          },
          {
            "name": "page",
            "in": "query",
            "description": "Number of the page starting by 0",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "size",
            "in": "query",
            "description": "Number of records by page. Default is 20",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "List of stops or empty array",
            "schema": {
              "$ref": "#/definitions/Page«Stop»"
            }
          }
        },
        "deprecated": false
      }
    },
    "/stats/heat-map-day": {
      "get": {
        "tags": [
          "Stats"
        ],
        "summary": "Clusters by Day",
        "description": "Retrieve the clusters per received day in the requested window to generate heat map",
        "operationId": "getHeatMapPerDayGET",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "latOne",
            "in": "query",
            "description": "Latitude one for boundary. Lower limit inclusive",
            "required": false,
            "type": "string",
            "allowEmptyValue": false
          },
          {
            "name": "latTwo",
            "in": "query",
            "description": "Latitude two for the boundary. Upper limit inclusive",
            "required": false,
            "type": "string",
            "allowEmptyValue": false
          },
          {
            "name": "lonOne",
            "in": "query",
            "description": "Longitude one for the boundary. Lower limit inclusive",
            "required": false,
            "type": "string",
            "allowEmptyValue": false
          },
          {
            "name": "lonTwo",
            "in": "query",
            "description": "Longitude two for the boundary. Upper limit inclusive",
            "required": false,
            "type": "string",
            "allowEmptyValue": false
          },
          {
            "name": "day",
            "in": "query",
            "description": "Day of the week: 1 - 7",
            "required": true,
            "type": "integer",
            "format": "int32",
            "enum": [
              "1",
              "2",
              "3",
              "4",
              "5",
              "6",
              "7"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "List of clusters (latitude, longitude, and count) identified by day",
            "schema": {
              "$ref": "#/definitions/List«Cluster»"
            }
          }
        },
        "deprecated": false
      }
    },
    "/stats/heat-map-hour": {
      "get": {
        "tags": [
          "Stats"
        ],
        "summary": "Clusters by Hour",
        "description": "Retrieve the clusters per received hour in the requested window to generate heat map",
        "operationId": "getHeatMapPerHourGET",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "latOne",
            "in": "query",
            "description": "Latitude one for boundary. Lower limit inclusive",
            "required": false,
            "type": "string",
            "allowEmptyValue": false
          },
          {
            "name": "latTwo",
            "in": "query",
            "description": "Latitude two for the boundary. Upper limit inclusive",
            "required": false,
            "type": "string",
            "allowEmptyValue": false
          },
          {
            "name": "lonOne",
            "in": "query",
            "description": "Longitude one for the boundary. Lower limit inclusive",
            "required": false,
            "type": "string",
            "allowEmptyValue": false
          },
          {
            "name": "lonTwo",
            "in": "query",
            "description": "Longitude two for the boundary. Upper limit inclusive",
            "required": false,
            "type": "string",
            "allowEmptyValue": false
          },
          {
            "name": "hour",
            "in": "query",
            "description": "Hour of the day: 0 - 23",
            "required": true,
            "type": "integer",
            "format": "int32",
            "enum": [
              "0",
              "1",
              "2",
              "3",
              "4",
              "5",
              "6",
              "7",
              "8",
              "9",
              "10",
              "11",
              "12",
              "13",
              "14",
              "15",
              "16",
              "17",
              "18",
              "19",
              "20",
              "21",
              "22",
              "23"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "List of clusters (latitude, longitude, and count) identified by hour",
            "schema": {
              "$ref": "#/definitions/List«Cluster»"
            }
          }
        },
        "deprecated": false
      }
    }
  },
  "definitions": {
    "List«Cluster»": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/Cluster"
      }
    },
    "Cluster": {
      "type": "object",
      "properties": {
        "lat": {
          "type": "string",
          "description": "Latitude. Center of the circle of the cluster"
        },
        "lon": {
          "type": "string",
          "description": "Longitude. Center of the circle of the cluster"
        },
        "count": {
          "type": "string",
          "description": "Number of point in the cluster"
        }
      }
    },
    "BicycleType": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "description": {
          "type": "string"
        }
      },
      "title": "BicycleType"
    },
    "Chart Stat": {
      "type": "object",
      "properties": {
        "labels": {
          "type": "array",
          "description": "Labels for the chart",
          "items": {
            "type": "string"
          }
        },
        "series": {
          "type": "array",
          "description": "Series",
          "items": {
            "$ref": "#/definitions/Data set"
          }
        }
      },
      "title": "Chart Stat",
      "description": "Data to generate a chart"
    },
    "Data set": {
      "type": "object",
      "properties": {
        "data": {
          "type": "array",
          "description": "Values for the series",
          "items": {
            "type": "string"
          }
        },
        "title": {
          "type": "string",
          "description": "Title of the series"
        }
      },
      "title": "Data set",
      "description": "Represent one line or element in a chart"
    },
    "Incident": {
      "type": "object",
      "properties": {
        "bicycle_type": {
          "description": "Bicycle type",
          "$ref": "#/definitions/BicycleType"
        },
        "bus_coach_involved": {
          "type": "boolean",
          "description": "Bus coach involved"
        },
        "car_involved": {
          "type": "boolean",
          "description": "Car involved"
        },
        "child_attached": {
          "type": "boolean",
          "description": "Child attached"
        },
        "child_transported": {
          "type": "boolean",
          "description": "Child transported"
        },
        "cyclist_involved": {
          "type": "boolean",
          "description": "Cyclist Involved"
        },
        "delivery_van_involved": {
          "type": "boolean",
          "description": "Delivery Van Involved"
        },
        "description": {
          "type": "string",
          "description": "Description"
        },
        "id": {
          "type": "string",
          "description": "Unique identification of an incident"
        },
        "incident_type": {
          "description": "Incident type",
          "$ref": "#/definitions/IncidentType"
        },
        "key_number": {
          "type": "string",
          "description": "Key number"
        },
        "lat": {
          "type": "string",
          "description": "latitude"
        },
        "lon": {
          "type": "string",
          "description": "longitude"
        },
        "lorry_truck_involved": {
          "type": "boolean",
          "description": "Lorry truck involved"
        },
        "motorcyclist_involved": {
          "type": "boolean",
          "description": "motorcyclist_involved"
        },
        "other_involved": {
          "type": "boolean",
          "description": "Other involved"
        },
        "pedestrian_involved": {
          "type": "boolean",
          "description": "Pedestrian involved"
        },
        "phone_location": {
          "description": "Phone location",
          "$ref": "#/definitions/PhoneLocation"
        },
        "scary": {
          "type": "boolean",
          "description": "Scary"
        },
        "taxi_cab_involved": {
          "type": "boolean",
          "description": "Taxi Cab Involved"
        },
        "timestamp": {
          "type": "string",
          "description": "Time of the incident"
        }
      },
      "title": "Incident",
      "description": "Identified incident in a ride"
    },
    "IncidentType": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "description": {
          "type": "string"
        }
      },
      "title": "IncidentType"
    },
    "Measurement": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique number of a measurement"
        },
        "lat": {
          "type": "string",
          "example": 12.0998,
          "description": "latitude"
        },
        "lon": {
          "type": "string",
          "example": 12.0998,
          "description": "longitude"
        },
        "timestamp": {
          "type": "string",
          "description": "Timestamp of the measurement"
        }
      },
      "title": "Measurement",
      "description": "Measurement of a ride"
    },
    "Pageable": {
      "type": "object",
      "properties": {
        "offset": {
          "type": "integer",
          "format": "int64"
        },
        "pageNumber": {
          "type": "integer",
          "format": "int32"
        },
        "pageSize": {
          "type": "integer",
          "format": "int32"
        },
        "paged": {
          "type": "boolean"
        },
        "sort": {
          "$ref": "#/definitions/Sort"
        },
        "unpaged": {
          "type": "boolean"
        }
      },
      "title": "Pageable"
    },
    "Page«Incident»": {
      "type": "object",
      "properties": {
        "content": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Incident"
          }
        },
        "empty": {
          "type": "boolean"
        },
        "first": {
          "type": "boolean"
        },
        "last": {
          "type": "boolean"
        },
        "number": {
          "type": "integer",
          "format": "int32"
        },
        "numberOfElements": {
          "type": "integer",
          "format": "int32"
        },
        "pageable": {
          "$ref": "#/definitions/Pageable"
        },
        "size": {
          "type": "integer",
          "format": "int32"
        },
        "sort": {
          "$ref": "#/definitions/Sort"
        },
        "totalElements": {
          "type": "integer",
          "format": "int64"
        },
        "totalPages": {
          "type": "integer",
          "format": "int32"
        }
      },
      "title": "Page«Incident»"
    },
    "Page«Measurement»": {
      "type": "object",
      "properties": {
        "content": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Measurement"
          }
        },
        "empty": {
          "type": "boolean"
        },
        "first": {
          "type": "boolean"
        },
        "last": {
          "type": "boolean"
        },
        "number": {
          "type": "integer",
          "format": "int32"
        },
        "numberOfElements": {
          "type": "integer",
          "format": "int32"
        },
        "pageable": {
          "$ref": "#/definitions/Pageable"
        },
        "size": {
          "type": "integer",
          "format": "int32"
        },
        "sort": {
          "$ref": "#/definitions/Sort"
        },
        "totalElements": {
          "type": "integer",
          "format": "int64"
        },
        "totalPages": {
          "type": "integer",
          "format": "int32"
        }
      },
      "title": "Page«Measurement»"
    },
    "Page«Stop Hotspot»": {
      "type": "object",
      "properties": {
        "content": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Stop Hotspot"
          }
        },
        "empty": {
          "type": "boolean"
        },
        "first": {
          "type": "boolean"
        },
        "last": {
          "type": "boolean"
        },
        "number": {
          "type": "integer",
          "format": "int32"
        },
        "numberOfElements": {
          "type": "integer",
          "format": "int32"
        },
        "pageable": {
          "$ref": "#/definitions/Pageable"
        },
        "size": {
          "type": "integer",
          "format": "int32"
        },
        "sort": {
          "$ref": "#/definitions/Sort"
        },
        "totalElements": {
          "type": "integer",
          "format": "int64"
        },
        "totalPages": {
          "type": "integer",
          "format": "int32"
        }
      },
      "title": "Page«Stop Hotspot»"
    },
    "Page«Stop»": {
      "type": "object",
      "properties": {
        "content": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Stop"
          }
        },
        "empty": {
          "type": "boolean"
        },
        "first": {
          "type": "boolean"
        },
        "last": {
          "type": "boolean"
        },
        "number": {
          "type": "integer",
          "format": "int32"
        },
        "numberOfElements": {
          "type": "integer",
          "format": "int32"
        },
        "pageable": {
          "$ref": "#/definitions/Pageable"
        },
        "size": {
          "type": "integer",
          "format": "int32"
        },
        "sort": {
          "$ref": "#/definitions/Sort"
        },
        "totalElements": {
          "type": "integer",
          "format": "int64"
        },
        "totalPages": {
          "type": "integer",
          "format": "int32"
        }
      },
      "title": "Page«Stop»"
    },
    "Page«string»": {
      "type": "object",
      "properties": {
        "content": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "empty": {
          "type": "boolean"
        },
        "first": {
          "type": "boolean"
        },
        "last": {
          "type": "boolean"
        },
        "number": {
          "type": "integer",
          "format": "int32"
        },
        "numberOfElements": {
          "type": "integer",
          "format": "int32"
        },
        "pageable": {
          "$ref": "#/definitions/Pageable"
        },
        "size": {
          "type": "integer",
          "format": "int32"
        },
        "sort": {
          "$ref": "#/definitions/Sort"
        },
        "totalElements": {
          "type": "integer",
          "format": "int64"
        },
        "totalPages": {
          "type": "integer",
          "format": "int32"
        }
      },
      "title": "Page«string»"
    },
    "PhoneLocation": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "description": {
          "type": "string"
        }
      },
      "title": "PhoneLocation"
    },
    "Sort": {
      "type": "object",
      "properties": {
        "empty": {
          "type": "boolean"
        },
        "sorted": {
          "type": "boolean"
        },
        "unsorted": {
          "type": "boolean"
        }
      },
      "title": "Sort"
    },
    "Stop": {
      "type": "object",
      "properties": {
        "direction": {
          "type": "string",
          "example": 270,
          "description": "direction of the ride before stopping in degrees (0, 360), when 0 means North "
        },
        "duration": {
          "type": "string",
          "example": 4,
          "description": "duration of the stop in milliseconds"
        },
        "id": {
          "type": "string",
          "description": "Unique number of stop"
        },
        "lat": {
          "type": "string",
          "example": 12.0998,
          "description": "latitude"
        },
        "lon": {
          "type": "string",
          "example": 12.0998,
          "description": "longitude"
        }
      },
      "title": "Stop",
      "description": "Identified stop by track"
    },
    "Stop Hotspot": {
      "type": "object",
      "properties": {
        "direction": {
          "type": "string",
          "example": 270.87,
          "description": "direction of the ride before stopping in degrees (0, 360), when 0 means North "
        },
        "found_stops": {
          "type": "string",
          "example": 4,
          "description": "How may times the stop was found in several rides"
        },
        "id": {
          "type": "string",
          "description": "Unique number of a stopping hot spot"
        },
        "lat": {
          "type": "string",
          "example": 12.0998,
          "description": "latitude"
        },
        "lon": {
          "type": "string",
          "example": 12.0998,
          "description": "longitude"
        },
        "mean_stop_time_in_ms": {
          "type": "string",
          "description": "Average duration in the stop in milliseconds"
        },
        "standard_deviation_stop_time_in_ms": {
          "type": "string",
          "description": "Standard deviation duration in the stop in milliseconds"
        }
      },
      "title": "Stop Hotspot",
      "description": "Common stops found in rides"
    }
  }
}